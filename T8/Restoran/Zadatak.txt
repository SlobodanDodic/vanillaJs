Restoran:

U fajlu StavkaJelovnika.ts implementirati klasu StavkaJelovnika:
	-	StavkaJelovnika se sastoji od atributa:
	
		private _id: number;
		private _naziv: string;
		private _cena: number;
		private _tip: string;
		
	-	Staticke promenljive LAST_ID:
		
		static LAST_ID: number = 0;
	
	-	Konstruktora:
		-	Konstruktor kao paremetre prima vrednosti za sve atribute osim atributa _id;
		-	U konstruktoru povecati vrednosti staticke promenljive (StavkaJelovnika.LAST_ID) za jedan
		-	Atribut _id inicijalizovati na vrednosti staticke promenljive StavkaJelovnika.LAST_ID
		-	Inicijalizovati ostale atribute.
	
	-	Getera i setera za sve atribute.
	
U fajlu StavkaPorudzbine.ts implementirati klasu StavkaPorudzbine:
	
	-	StavkaPorudzbine se sastoji od atributa:
		
		private _stavkaJelovnika: StavkaJelovnika;
		private _kolicina: number;
		
	-	Konstruktora
	-	Getera i setera za sva polja
	
U fajlu Porudzbina.ts implementirati klasu Porudzbina:

	-	Porudzbina se sastoji od atributa:
	
		private _id: number;
		private _imeKlijenta: string;
		private _datum: Date;
		private _status: string;
		private _stavke: StavkaPorudzbine[];
		
	
	-	Staticke promenljive LAST_ID:
		
		static LAST_ID: number = 0;
		
	-	Konstruktora:
		-	Konstruktor kao paremetre prima vrednosti za sve atribute osim atributa _id i _stavke;
		-	Za atribut _status napraviti da parametar konstruktora ima podrazumevanu (defaultnu) vrednost "Otvorena"
		-	U konstruktoru povecati vrednosti staticke promenljive (Porudzbina.LAST_ID) za jedan
		-	Atribut _id inicijalizovati na vrednosti staticke promenljive Porudzbina.LAST_ID
		-	Inicijalizovati ostale atribute. Atribut _stavke treba da bude prazan niz.

	
	-	Getera i setera za sva atribute.
	
	-	Metode cenaPorudzbine:		
		-	Metoda racuna cenu porudzbine. 
			Cena porudzbine se racuna kao zbir cena pomnozenih sa odgovarajucim kolicinama.
	
U fajlu Restoran.ts implementirati klasu Restoran:
	
	-	Restoran se sastoji od atributa:
		
		private _naziv: string;
		private _jelovnik: StavkaJelovnika[];
		private _porudzbine: Porudzbina[];
	
	
	-	Statickih promenljivih:
		
		static readonly BODOVI_PO_TIPU = {"Predjelo": 1, "Glavno jelo": 3, "Desert": 1};
		static readonly BODOVI_ZA_GOLD = 10;
		
		Kljucna rec "readonly" obelezava da tu staticku promenljivu zelimo da samo citamo a ne da i pisemo (menjamo).
		
	
	-	Konstruktora:
		-	Konstruktor prima samo vrednost samo za atribut _naziv.
		-	Inicijalizovati ostale atribute. Nizovi treba da budu iniciajlizovani na prazan niz.
	
	-	Metoda:
		
		-	dodajStavkuJelovnika
			- 	kao parametar prima objekat tipa StavkaJelovnika
			-	nema povratnu vrednost
			Dodaje StavkaJelovnika u odgovarajuci niz (atribut klase).
			Poziva metodu koja osvezava ispis stavki jelovnika na html stranici.
		-	refreshJelovnik
			-	nema parametre
			-	nema povratnu vrednost
			Metoda osvezava ispis stavki jelovnika na html stranici.
			Za svaku stavku jelovnika u resotoranu se pravi list item <li> koji se 
			upisuje u unordered listu <ul> sa id-jem "listajelovnik".
			List itemi treba da imaju sledeci izgled:
			
				<li class="list-group-item list-group-item-action d-flex justify-content-between align-items-start" onclick="clickedMenu(1)">
					<div class="ms-2 me-auto fw-bold">Pohovani šampinjoni u sosu od gorgonzole (530)</div>
					<span class="badge bg-primary rounded-pill" id="spanJelovnik1"></span>
				</li>
				<li class="list-group-item list-group-item-action d-flex justify-content-between align-items-start" onclick="clickedMenu(2)">
					<div class="ms-2 me-auto fw-bold">PITA sa piletinom i povrćem (680)</div>
					<span class="badge bg-primary rounded-pill" id="spanJelovnik2"></span>
				</li>
				<li class="list-group-item list-group-item-action d-flex justify-content-between align-items-start" onclick="clickedMenu(3)">
					<div class="ms-2 me-auto fw-bold">Bruskete sa paradajzom i bosiljkom (460)</div>
					<span class="badge bg-primary rounded-pill" id="spanJelovnik3"></span>
				</li>
				
		-	napraviPorudzbinu
			-	prima dva parametra imeKlijenta tipa string i datum tipa Date
			-	povratna vrednost je objekat porudzbine
			Metoda pravi novi objekat tipa Porudzbina, dodaje ga u odgovarajuci niz restorana i vraca
			kao rezultat izvrsenja metode.
		-	getStavkaJelovnikaById
			-	prima jedan parametar id tipa number
			-	povratna vrednost je StavkaJelovnika
			Metoda vraca objekat tipa StavkaJelovnika iz odgovarajuceg niza
			ciji id je jedan prosledjenom vrednoscu. Ukoliko vrednost ne postoji
			vraca null.
			
	-	Geteri i seteri za sve atribute
	
U fajlu app.ts

	Postoje 4 globalne promenljive u ovom fajlu:
		
		let stavkeJelovnikaInit: any;
		let porudzbineInit: any;
		let otvorenaPorudzbina: Porudzbina = null;
		let aktivanRestoran = new Restoran("Kod Raspevanog Italijana");

	Promenljive stavkeJelovnikaInit i porudzbineInit su pomocne promenljive sa kojima 
	se ucitavaju inicialni podaci definisani u podaci.js fajlu.
	Podaci se ucitavaju uz pomoc ucitajPodatke funkcije implementirane na dnu fajla.
	
	
	Promenljive otvorenaPorudzbina i aktivanRestoran sluze za interakciju korisnika sa stranicom.
	Svaka nova porudzbina koju napravimo bice smestena u promenljivu otvorenaPorudzbina i dodata u aktivanRestoran.
	

	-	Implementirati funkciju otvoriPorudzbinu
		-	 Kao parametar funkcija prima HTMLFormElement
		Funkcija se poziva kao onsubmit dogadaj forme #unosForma. (Proveriti u HTML-u)
		Funkcija preuzima imeKlijenta iz odgovarajuce html input elementa.
		Preuzima trenutni datum i vreme tako sto se poziva konstruktor klase Date, tj. new Date();
		Podaci se prosledjuju metodi napraviPorudzbinu koja nam vraca novu porudzbinu.
		Vracenu porudzbinu dodeliti u globalnu promenljivu otvorenaPorudzbina.
		
		Nakon pravljena porudzbine popuniti odgovarajuce input polja (u divu sa id-jem otvorenaporudzbinadiv)
		sa podacima iz porudzbine. I ukloniti atribut "hidden" sa metodom removeAttribute navedenog diva.
		
		Osveziti ispis jelovnika, prikazati jelovnik, izbrisati sadrzaj <p> taga sa id-jem "ispis".
		Onemoguciti klik na dugme sa id-jem otvoribtn.
		
		return false; - spreciti submit dogadjaj forme.
	
	-	Implementirati funkciju clickedMenu
		-	Kao parametar prima id StavkaJelovnika na koju je korisnik kliknuo.
		Pronaci stavku jelovnika u aktivanRestoran-u.
		Pronaci stavku porudzbine u otvorenojPorudzbini koja ima navedenu stavku.
		(Ukoliko ne postoji navedena StavkaJelovnika kao deo StavkePorudzbine u otvorenojPorudzbini, napraviti novu stavku.)
		Povecati kolicinu stavke porudzbine za 1 i u element sa id-jem "spanJelovnik${ID}" upisati novu kolicinu stavkePorudzbine.
		(${ID} predstavlja id stavke jelovnika).
		
	-	Implementirati funkciju zatvoriPorudzbinu.
		-	nema parametre
		-	nema povratnu vrednost
		
		Krije html elemente sa id-jevima "otvorenaporudzbinadiv" i "jelovnikdiv" dodavanjem attributa hidden (setAttribute)
		Menja status otvorenaPorudzbine u "Zatvorena"
		Omogucava klik na dugme sa id-jem "otvoribtn"
		U <p> sa id-jem ispis ispisuje racun za porudzbinu u sledecem formatu:
		
			Porudzbina broj: 9
			Klijent: Aleksandar
			Datum: Tue Sep 5 2023 21:59:25 GMT+0200 (Central European Summer Time)

			Naručeno:
			Pohovani šampinjoni u sosu od gorgonzole (530 x 2) ---- 1060
			Karađorđeva šnicla (1250 x 1) ---- 1250
			Krempita (410 x 1) ---- 410

			Ukupna za naplatu: 2720
			
		Postavlja vrednost promenljive otvorenaPorudzbina na null.
		
	-	Implementirati funkciju otkaziPorudzbinu.
		-	nema parametre
		-	nema povratnu vrednost
		
		Menja status promenljive otkaziPorudzbinu na "Otkazana"
		Krije, omogucava, i resetuje vrednost pormenljive kao i metoda zatvoriPorudzbinu.
		Tj. radi isto kao i metoda zatvoriPorudzbinu osim ispisa racuna.
		
		
U fajlu Restoran.ts implementirati klasu Restoran:
	
	Implementirati metodu:
	
	-	public zlatniKlijenti(): string
	
		Metoda vraca spisak GOLD klijenta restorana kao string:
	
			Spisak GOLD klijenata: <br>
			Pera Peric sa 11 ukupno bodova. <br>
		
		GOLD klijenti su svi klijenti koji su u svojim porudzbinama sa statusom "Zatvorena" 
		akumulirali broj bodova veci od staticke promenljive Restoran.BODOVI_ZA_GOLD.
		Bodovi se racunaju tako sto se sumiraju bodovi na osnovu tipa StavkeJelovnika za svaku stavku 
		(pomnozenu sa kolicinom) iz svake zatvorene porudzbine.
		Bodovi za tip su dati u statickoj promenljivoj BODOVI_PO_TIPU.
	
		Npr. u primeru racuna iznad:
	
		Predjelo "Pohovani šampinjoni u sosu od gorgonzole" je naruceno dva puta -> 1 * 2 == 2 
		Glavno jelo "Karađorđeva šnicla" je naruceno jednom -> 3 * 1 == 3
		Desert "Krempita" je narucena jednom -> 1 * 1 == 1
		Ukupno bodova za ovu porudzbinu klijent "Aleksandar" je 2 + 3 + 1 == 6
		
	-	najProfitabilnijiTipPoKlijentu(): string
		
		Metoda vraca spisak najprofitabilnijeg tipa jela po klijentu kao string:
		
			Pera Peric je najviše potrošio na tip "Glavno jelo" (3820) <br>
			Mika Mikic je najviše potrošio na tip "Predjelo" (1280) <br>
			Zika Zikic je najviše potrošio na tip "Glavno jelo" (2500) <br>
			Petar Petrovic je najviše potrošio na tip "Predjelo" (460) <br>
			Ljubo Ljubic je najviše potrošio na tip "Predjelo" (1060) <br>
			
		Za svakog klijenta, za svaku zatvorenu porudzbinu, se sumira koliko je potrosio
		novca za svaki tip StavkeJelovnika. Nakon toga za svakog klijenta se odredjuje koji
		tip ima maksimalnu vrednost i on se racuna kao najprofitabilnija za tog klijenta.
		Npr. sa testinm podacima dobicemo sledece vrednosti: 
		
			{
			   "Pera Peric":{
				  "Predjelo":530,
				  "Glavno jelo":3820,
				  "Desert":1690
			   },
			   "Mika Mikic":{
				  "Predjelo":1280
			   },
			   "Zika Zikic":{
				  "Glavno jelo":2500,
				  "Desert":910,
				  "Predjelo":460
			   },
			   "Petar Petrovic":{
				  "Predjelo":460
			   },
			   "Ljubo Ljubic":{
				  "Predjelo":1060
			   }
			}
		
		Iz kojih mozemo da zakljucimo na koji tip su su klijenti najvise novca potrosili.
		
U fajlu app.ts
	
	-	Implementirati funkcije:
		-	zlatniKlijenti
			U <p> sa id-jem ispis upisuje rezultat metode zlatniKlijenti aktivnogRestorana
		-	jelaPoKlijentu
			U <p> sa id-jem ispis upisuje rezultat metode najProfitabilnijiTipPoKlijentu aktivnogRestorana
		
	
		
		
			
		
				
				
			
			
			
			
	

